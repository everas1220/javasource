스트림
 - 컬렉션(배열 포함)의 저장 요소를 하나씩 참조해서
     람다식으로 처리할수 있도록 도와주는 soqn반복자
 - 중간처리(매핑, 필터링, 정렬)와 최종처리(반복, 카운팅,합계,평균)
 - 한번 소비(최종처리)되면 재성성해야 함

-- 중간처리 --
 -1) filter() : 조건 필터링
 -2) distint() : 중복제거
 -3) map(Function<T,R> mapper) : 스트림의 요소를 변환
     mapToInt(ToIntFunction<? super Member> mapper) : R 타입이 int
     mapToLong(ToIntFunction<? super Member> mapper) : R 타입이 Long
     mapTodouble(ToIntFunction<? super Member> mapper) : R 타입이 double
 -4) skip() : 스트림의 일부를 잘라낼때 사용
 -5) limit() : 스트림의 일부를 잘라낼때 사용
 -6) peek() : 중간연산을 확인할때 사용



-- 최종처리 --
 1) forEach()
 2) collect()
 3) count()/sum()/average()/max()/min()

--Optional<T>
 -최종 연산의 결과를 Optional 객체에 담아서 반환
 -반환된 결과가 null인지 매번 if문으로 체크하는 대신 
    메소드를 통해 간단히 처리할수있다.
 -Optional 객체값 가져오기 : get() 
 -널 일때 반환값 지정 : orElse()
 -널 일때 false, 아닐때 true : isPresent()
 -널 일때 아무일도 하지않음, 아닐때 람다식 실행 : ifPresent(Consumer)

OptionalDouble
OptionalInt
